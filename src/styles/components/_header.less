/*-- -------------------------- -->
<---     Header Component       -->
<--- -------------------------- -*/

/**
 * Migrated from #cs-navigation to .cs-navigation
 * Uses lower specificity class selector
 * Temporary alias maintained in legacy layer
 */

@media only screen and (min-width: 0em) {
  .cs-navigation {
    width: 100%;
    /* prevents padding and border from affecting height and width */
    box-sizing: border-box;
    padding: (13/16rem) (16/16rem);
    background-color: var(--background-main);
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    position: fixed;
    z-index: 10000;

    .cs-container {
      width: 100%;
      max-width: (1280/16rem);
      margin: auto;
      display: flex;
      justify-content: flex-end;
      align-items: center;
      gap: (24/16rem);
    }

    .cs-logo {
      width: auto;
      max-width: (350/16rem);
      height: (32/16rem);
      /* margin-right auto pushes everything away from it to the right */
      margin: 0 auto 0 0;
      padding: 0;
      display: flex;
      justify-content: flex-start;
      align-items: center;
      z-index: 10;

      img {
        width: auto;
        height: 100%;
        /* ensures the image never overflows the container. It stays contained within it's width and height and expands to fill it then stops once it reaches an edge */
        object-fit: contain;
      }

      .cs-logo-text {
        display: none;
      }
    }

    .cs-toggle {
      width: (56/16rem);
      height: (56/16rem);
      margin: 0 0 0 auto;
      background-color: var(--primary);
      border: none;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .cs-active {
      .cs-line1 {
        top: 50%;
        transform: translate(-50%, -50%) rotate(225deg);
      }

      .cs-line2 {
        top: 50%;
        transform-origin: center;
        transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
      }

      .cs-line3 {
        bottom: 100%;
        opacity: 0;
      }
    }

    .cs-box {
      /* 24px - 28px */
      width: clamp(1.5rem, 2vw, 1.75rem);
      height: (16/16rem);
      position: relative;
    }

    .cs-line {
      width: 100%;
      height: 2px;
      border-radius: 2px;
      background-color: #fafbfc;
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
    }

    .cs-line1 {
      top: 0;
      transform-origin: center;
      transition:
        transform 0.5s,
        top 0.3s,
        left 0.3s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-fill-mode: forwards;
      animation-direction: normal;
    }

    .cs-line2 {
      top: 50%;
      transform: translateX(-50%) translateY(-50%);
      transition:
        top 0.3s,
        left 0.3s,
        transform 0.5s;
      animation-duration: 0.7s;
      animation-timing-function: ease;
      animation-fill-mode: forwards;
      animation-direction: normal;
    }

    .cs-line3 {
      bottom: 0;
      transition:
        bottom 0.3s,
        opacity 0.3s;
    }

    .cs-ul-wrapper {
      width: 100%;
      height: 100vh;
      padding-bottom: (48/16em);
      opacity: 0;
      background-color: #fff;
      box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
      overflow: hidden;
      position: absolute;
      top: 100%;
      left: 0;
      z-index: -1;
      transform: scaleY(0);
      transform-origin: top;
      transition:
        transform 0.4s,
        opacity 0.3s;
    }

    .cs-ul {
      margin: 0;
      padding: (48/16rem) 0 0 0;
      width: 100%;
      height: auto;
      max-height: 65vh;
      overflow: scroll;
      display: flex;
      justify-content: flex-start;
      flex-direction: column;
      align-items: center;
      gap: (20/16rem);
    }

    .cs-li {
      width: 100%;
      text-align: center;
      list-style: none;
      margin-right: 0;
      /* transition from these values */
      transform: translateY(-4.375rem);
      opacity: 0;
      transition:
        transform 0.6s,
        opacity 0.9s;

      &:nth-of-type(1) {
        transition-delay: 0.05s;
      }
      &:nth-of-type(2) {
        transition-delay: 0.1s;
      }
      &:nth-of-type(3) {
        transition-delay: 0.15s;
      }
      &:nth-of-type(4) {
        transition-delay: 0.2s;
      }
      &:nth-of-type(5) {
        transition-delay: 0.25s;
      }
      &:nth-of-type(6) {
        transition-delay: 0.3s;
      }
      &:nth-of-type(7) {
        transition-delay: 0.35s;
      }
      &:nth-of-type(8) {
        transition-delay: 0.4s;
      }
      &:nth-of-type(9) {
        transition-delay: 0.45s;
      }
      &:nth-of-type(10) {
        transition-delay: 0.5s;
      }
      &:nth-of-type(11) {
        transition-delay: 0.55s;
      }
      &:nth-of-type(12) {
        transition-delay: 0.6s;
      }
      &:nth-of-type(13) {
        transition-delay: 0.65s;
      }
    }

    .cs-li-link {
      /* 16px - 24px */
      font-size: clamp(1rem, 2.5vw, 1.5rem);
      line-height: 1.2em;
      text-decoration: none;
      margin: 0;
      color: var(--headerColor);
      display: inline-block;
      position: relative;

      &:hover {
        &:before {
          width: 100%;
        }
      }

      &.cs-active {
        &:before {
          width: 100%;
        }
      }

      &:before {
        /* active state underline */
        content: "";
        width: 0%;
        height: 2px;
        background: var(--primary);
        opacity: 1;
        position: absolute;
        display: block;
        bottom: (0/16rem);
        left: 0;
        transition: width 0.3s;
      }
    }

    .cs-button-solid {
      display: none;
    }
  }
}

/* Tablet - 768px */
@media only screen and (min-width: 48em) {
  .cs-navigation {
    .cs-toggle {
      display: none;
    }

    .cs-logo {
      height: (60/16rem);
      max-width: 30%;
      .cs-logo-text {
        display: inline;
        margin-left: (10/16rem);
        font-size: (16/16rem);
        font-weight: 700;
        color: var(--headerColor);
      }
    }

    .cs-ul-wrapper {
      width: auto;
      max-width: 100%;
      height: auto;
      padding: 0;
      opacity: 1;
      background-color: transparent;
      box-shadow: none;
      overflow: visible;
      /* reset the transform from the 0px screen size styles */
      transform: scaleY(1);
      position: static;
      z-index: auto;
      transition: none;
    }

    .cs-ul {
      width: 100%;
      max-width: none;
      margin: 0;
      padding: 0;
      /* 20px - 36px */
      gap: clamp(1.25rem, 2.6vw, 2.25rem);
      flex-direction: row;
      justify-content: flex-start;
      align-items: center;
    }

    .cs-li {
      width: auto;
      transform: none;
      opacity: 1;
      transition: none;
    }

    .cs-li-link {
      /* 14px - 16px */
      font-size: clamp(0.875rem, 1vw, 1rem);
      &:before {
        display: none;
      }
      &:hover,
      &.cs-active {
        opacity: 1;
        &:before {
          width: 100%;
        }
      }
    }

    .cs-button-solid {
      display: block;
    }
  }
}

/* Desktop - 1024px */
@media only screen and (min-width: 64em) {
  .cs-navigation {
    .cs-ul {
      /* 20px - 52px */
      gap: clamp(1.25rem, 4vw, 3.25rem);
    }
  }
}

/* Large Desktop - 1300px */
@media only screen and (min-width: 81.25em) {
  .cs-navigation {
    .cs-container {
      max-width: (1920/16rem);
      gap: (52/16rem);
    }

    .cs-ul {
      padding: 0 (48/16rem);
    }

    .cs-li:last-of-type {
      /* margin-left auto will push that specific list item to the right of the flexbox as far as it can go. Only works in flexbox */
      margin-left: auto;
    }
  }
}

/* Dark Mode */
@media only screen and (min-width: 0em) {
  body.dark-mode {
    .cs-navigation {
      background-color: var(--dark);

      .cs-logo {
        /* makes it white */
        filter: grayscale(1) brightness(1000%);
      }

      .cs-ul-wrapper {
        background-color: var(--medium);
      }

      .cs-li-link {
        color: var(--bodyTextColorWhite);
      }
    }
  }
}
