---
import { getImage } from 'astro:assets';
import type { ImageMetadata } from 'astro';

// TS types
interface Props {
  mobileImgUrl: string | ImageMetadata;
  mobileMediaWidth: string;
  desktopImgUrl: string | ImageMetadata;
  desktopMediaWidth: string;
  fallbackImgUrl: string | ImageMetadata;
  alt: string;
}

const {
  mobileImgUrl,
  mobileMediaWidth,
  desktopImgUrl,
  desktopMediaWidth,
  fallbackImgUrl,
  alt,
} = Astro.props;

const mobileImg = await getImage({
  src: mobileImgUrl,
  format: 'webp',
  // Adjust the width and height to play with the image's intrinsic size and ultimately, its file size
  width: 200,
  height: 200,
});

const desktopImg = await getImage({
  src: desktopImgUrl,
  format: 'webp',
  // Adjust the width and height to play with the image's intrinsic size and ultimately, its file size
  width: 800,
  height: 200,
});

const fallbackImg = await getImage({
  src: fallbackImgUrl,
  format: 'jpg',
  // Adjust the width and height to play with the image's intrinsic size and ultimately, its file size
  width: 800,
  height: 200,
});
---

<!-- Adjust the width and height attributes sizes based on the stitch you're using -->
<picture>
  <source
    media=`(max-width: ${mobileMediaWidth})`
    srcset={mobileImg.src}
  />
  <source
    media=`(min-width: ${desktopMediaWidth})`
    srcset={desktopImg.src}
  />
  <img
    aria-hidden="true"
    decoding="async"
    src={fallbackImg.src}
    alt={alt}
    loading="lazy"
    width="2500"
    height="1667"
  />
</picture>

<!-- Adjust the styles based on the stitch you're using -->
<style lang="less">
  @import '../../styles/components/cs-picture.less';
</style>
